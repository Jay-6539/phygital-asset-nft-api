const { ethers } = require("hardhat");

async function main() {
    console.log("üöÄ ÂºÄÂßãÈÉ®ÁΩ≤Phygital Asset NFTÂêàÁ∫¶Âà∞AmoyÊµãËØïÁΩë...");
    
    // Ëé∑ÂèñÈÉ®ÁΩ≤ËÄÖË¥¶Êà∑
    const [deployer] = await ethers.getSigners();
    console.log("üìù ÈÉ®ÁΩ≤Ë¥¶Êà∑:", deployer.address);
    
    // Ê£ÄÊü•Ë¥¶Êà∑‰ΩôÈ¢ù
    const balance = await deployer.getBalance();
    console.log("üí∞ Ë¥¶Êà∑‰ΩôÈ¢ù:", ethers.utils.formatEther(balance), "MATIC");
    
    if (balance.lt(ethers.utils.parseEther("0.01"))) {
        console.log("‚ö†Ô∏è  ‰ΩôÈ¢ù‰∏çË∂≥ÔºåËØ∑‰ªéÊ∞¥ÈæôÂ§¥Ëé∑ÂèñÊµãËØïMATIC");
        console.log("üîó Ê∞¥ÈæôÂ§¥Âú∞ÂùÄ: https://faucet.polygon.technology/");
        return;
    }
    
    // ÈÉ®ÁΩ≤ÂêàÁ∫¶
    console.log("üì¶ Ê≠£Âú®ÈÉ®ÁΩ≤ÂêàÁ∫¶...");
    const PhygitalAssetNFT = await ethers.getContractFactory("PhygitalAssetNFT");
    const nft = await PhygitalAssetNFT.deploy();
    
    console.log("‚è≥ Á≠âÂæÖÂêàÁ∫¶ÈÉ®ÁΩ≤Á°ÆËÆ§...");
    await nft.deployed();
    
    console.log("‚úÖ ÂêàÁ∫¶ÈÉ®ÁΩ≤ÊàêÂäü!");
    console.log("üìç ÂêàÁ∫¶Âú∞ÂùÄ:", nft.address);
    console.log("üîó ‰∫§ÊòìÂìàÂ∏å:", nft.deployTransaction.hash);
    console.log("‚õΩ Gas‰ΩøÁî®Èáè:", nft.deployTransaction.gasLimit.toString());
    
    // È™åËØÅÂêàÁ∫¶‰ø°ÊÅØ
    console.log("\nüìä ÂêàÁ∫¶‰ø°ÊÅØ:");
    const contractInfo = await nft.getContractInfo();
    console.log("  ÂêçÁß∞:", contractInfo.name);
    console.log("  Á¨¶Âè∑:", contractInfo.symbol);
    console.log("  ÊÄª‰æõÂ∫îÈáè:", contractInfo.totalSupply.toString());
    console.log("  Êã•ÊúâËÄÖ:", contractInfo.owner);
    
    // ÊµãËØïÈì∏ÈÄ†ÂäüËÉΩ
    console.log("\nüß™ ÊµãËØïÈì∏ÈÄ†ÂäüËÉΩ...");
    try {
        const testThreadId = "test-thread-" + Date.now();
        const tx = await nft.mintThread(
            testThreadId,
            "Test User",
            "Test Building",
            "Test Description",
            "https://example.com/image.jpg"
        );
        
        console.log("üìù ÊµãËØïÈì∏ÈÄ†‰∫§Êòì:", tx.hash);
        const receipt = await tx.wait();
        console.log("‚úÖ ÊµãËØïÈì∏ÈÄ†ÊàêÂäü!");
        
        // Ëé∑ÂèñToken ID
        const tokenId = await nft.getTokenIdByThreadId(testThreadId);
        console.log("üé® Token ID:", tokenId.toString());
        
        // Ëé∑ÂèñÂÖÉÊï∞ÊçÆ
        const metadata = await nft.getThreadMetadata(tokenId);
        console.log("üìã ÂÖÉÊï∞ÊçÆ:");
        console.log("  Thread ID:", metadata.threadId);
        console.log("  Áî®Êà∑Âêç:", metadata.username);
        console.log("  Âª∫Á≠ëID:", metadata.buildingId);
        console.log("  ÊèèËø∞:", metadata.description);
        console.log("  ÂõæÁâáURL:", metadata.imageUrl);
        console.log("  ÂàõÂª∫Êó∂Èó¥:", new Date(metadata.createdAt * 1000).toISOString());
        
    } catch (error) {
        console.log("‚ùå ÊµãËØïÈì∏ÈÄ†Â§±Ë¥•:", error.message);
    }
    
    console.log("\nüéâ ÈÉ®ÁΩ≤ÂÆåÊàê!");
    console.log("üìã ‰∏ã‰∏ÄÊ≠•:");
    console.log("1. Â∞ÜÂêàÁ∫¶Âú∞ÂùÄÊ∑ªÂä†Âà∞ÁéØÂ¢ÉÂèòÈáè: CONTRACT_ADDRESS=" + nft.address);
    console.log("2. Êõ¥Êñ∞APIÊúçÂä°ÈÖçÁΩÆ");
    console.log("3. Âú®Amoy PolygonscanÊü•ÁúãÂêàÁ∫¶: https://amoy.polygonscan.com/address/" + nft.address);
    console.log("4. ÊµãËØïNFTÈì∏ÈÄ†ÂäüËÉΩ");
    
    // ‰øùÂ≠òÈÉ®ÁΩ≤‰ø°ÊÅØÂà∞Êñá‰ª∂
    const fs = require('fs');
    const deploymentInfo = {
        contractAddress: nft.address,
        deployer: deployer.address,
        transactionHash: nft.deployTransaction.hash,
        gasUsed: nft.deployTransaction.gasLimit.toString(),
        timestamp: new Date().toISOString(),
        network: "amoy"
    };
    
    fs.writeFileSync('deployment-info.json', JSON.stringify(deploymentInfo, null, 2));
    console.log("üíæ ÈÉ®ÁΩ≤‰ø°ÊÅØÂ∑≤‰øùÂ≠òÂà∞ deployment-info.json");
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error("‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•:", error);
        process.exit(1);
    });
